//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\zahry\pjp\project\PLC_Lab7\PLC_Lab7\PLC_Lab7_expr.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PLC_Lab7 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PLC_Lab7_exprLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, ID=17, 
		INT=18, BOOL=19, FLOAT=20, STRING=21, WS=22, ASSIGN=23, UN_MIN=24, NEG_OP=25, 
		CMP_LT=26, CMP_MT=27, ADD_OP=28, MIN_OP=29, CONCAT_OP=30, MUL_OP=31, DIV_OP=32, 
		MOD_OP=33, LOG_OR=34, LOG_AND=35, EQ=36, NEQ=37;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "ID", "INT", 
		"BOOL", "FLOAT", "STRING", "WS", "ASSIGN", "UN_MIN", "NEG_OP", "CMP_LT", 
		"CMP_MT", "ADD_OP", "MIN_OP", "CONCAT_OP", "MUL_OP", "DIV_OP", "MOD_OP", 
		"LOG_OR", "LOG_AND", "EQ", "NEQ"
	};


	public PLC_Lab7_exprLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "','", "'int'", "'float'", "'bool'", "'string'", "'read'", 
		"'write'", "'{'", "'}'", "'if'", "'else'", "'('", "')'", "'while'", "'for'", 
		null, null, null, null, null, null, "'='", null, "'!'", "'<'", "'>'", 
		"'+'", null, "'.'", "'*'", "'/'", "'%'", "'||'", "'&&'", "'=='", "'!='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "ID", "INT", "BOOL", "FLOAT", "STRING", 
		"WS", "ASSIGN", "UN_MIN", "NEG_OP", "CMP_LT", "CMP_MT", "ADD_OP", "MIN_OP", 
		"CONCAT_OP", "MUL_OP", "DIV_OP", "MOD_OP", "LOG_OR", "LOG_AND", "EQ", 
		"NEQ"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PLC_Lab7_expr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\'\xE8\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\f"+
		"\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\a\x12"+
		"\x8F\n\x12\f\x12\xE\x12\x92\v\x12\x3\x13\x3\x13\a\x13\x96\n\x13\f\x13"+
		"\xE\x13\x99\v\x13\x3\x13\x5\x13\x9C\n\x13\x3\x14\x3\x14\x3\x14\x3\x14"+
		"\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x5\x14\xA7\n\x14\x3\x15\x3\x15\a\x15"+
		"\xAB\n\x15\f\x15\xE\x15\xAE\v\x15\x3\x15\x3\x15\a\x15\xB2\n\x15\f\x15"+
		"\xE\x15\xB5\v\x15\x3\x16\x3\x16\a\x16\xB9\n\x16\f\x16\xE\x16\xBC\v\x16"+
		"\x3\x16\x3\x16\x3\x17\x6\x17\xC1\n\x17\r\x17\xE\x17\xC2\x3\x17\x3\x17"+
		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C"+
		"\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3"+
		"#\x3#\x3#\x3$\x3$\x3$\x3%\x3%\x3%\x3&\x3&\x3&\x2\x2\x2\'\x3\x2\x3\x5\x2"+
		"\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
		"\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2"+
		"\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$"+
		"G\x2%I\x2&K\x2\'\x3\x2\b\x4\x2\x43\\\x63|\x6\x2\x32;\x43\\\x61\x61\x63"+
		"|\x3\x2\x33;\x3\x2\x32;\t\x2\"#\'@\x42]__\x61\x61\x63}\x7F\x7F\x5\x2\v"+
		"\f\xF\xF\"\"\xEF\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2"+
		"\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2"+
		"\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2"+
		"\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F"+
		"\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2"+
		"\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2"+
		"\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2"+
		"\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2"+
		"\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2"+
		"\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x3M\x3\x2\x2\x2\x5O\x3\x2\x2\x2"+
		"\aQ\x3\x2\x2\x2\tU\x3\x2\x2\x2\v[\x3\x2\x2\x2\r`\x3\x2\x2\x2\xFg\x3\x2"+
		"\x2\x2\x11l\x3\x2\x2\x2\x13r\x3\x2\x2\x2\x15t\x3\x2\x2\x2\x17v\x3\x2\x2"+
		"\x2\x19y\x3\x2\x2\x2\x1B~\x3\x2\x2\x2\x1D\x80\x3\x2\x2\x2\x1F\x82\x3\x2"+
		"\x2\x2!\x88\x3\x2\x2\x2#\x8C\x3\x2\x2\x2%\x9B\x3\x2\x2\x2\'\xA6\x3\x2"+
		"\x2\x2)\xA8\x3\x2\x2\x2+\xB6\x3\x2\x2\x2-\xC0\x3\x2\x2\x2/\xC6\x3\x2\x2"+
		"\x2\x31\xC8\x3\x2\x2\x2\x33\xCA\x3\x2\x2\x2\x35\xCC\x3\x2\x2\x2\x37\xCE"+
		"\x3\x2\x2\x2\x39\xD0\x3\x2\x2\x2;\xD2\x3\x2\x2\x2=\xD4\x3\x2\x2\x2?\xD6"+
		"\x3\x2\x2\x2\x41\xD8\x3\x2\x2\x2\x43\xDA\x3\x2\x2\x2\x45\xDC\x3\x2\x2"+
		"\x2G\xDF\x3\x2\x2\x2I\xE2\x3\x2\x2\x2K\xE5\x3\x2\x2\x2MN\a=\x2\x2N\x4"+
		"\x3\x2\x2\x2OP\a.\x2\x2P\x6\x3\x2\x2\x2QR\ak\x2\x2RS\ap\x2\x2ST\av\x2"+
		"\x2T\b\x3\x2\x2\x2UV\ah\x2\x2VW\an\x2\x2WX\aq\x2\x2XY\a\x63\x2\x2YZ\a"+
		"v\x2\x2Z\n\x3\x2\x2\x2[\\\a\x64\x2\x2\\]\aq\x2\x2]^\aq\x2\x2^_\an\x2\x2"+
		"_\f\x3\x2\x2\x2`\x61\au\x2\x2\x61\x62\av\x2\x2\x62\x63\at\x2\x2\x63\x64"+
		"\ak\x2\x2\x64\x65\ap\x2\x2\x65\x66\ai\x2\x2\x66\xE\x3\x2\x2\x2gh\at\x2"+
		"\x2hi\ag\x2\x2ij\a\x63\x2\x2jk\a\x66\x2\x2k\x10\x3\x2\x2\x2lm\ay\x2\x2"+
		"mn\at\x2\x2no\ak\x2\x2op\av\x2\x2pq\ag\x2\x2q\x12\x3\x2\x2\x2rs\a}\x2"+
		"\x2s\x14\x3\x2\x2\x2tu\a\x7F\x2\x2u\x16\x3\x2\x2\x2vw\ak\x2\x2wx\ah\x2"+
		"\x2x\x18\x3\x2\x2\x2yz\ag\x2\x2z{\an\x2\x2{|\au\x2\x2|}\ag\x2\x2}\x1A"+
		"\x3\x2\x2\x2~\x7F\a*\x2\x2\x7F\x1C\x3\x2\x2\x2\x80\x81\a+\x2\x2\x81\x1E"+
		"\x3\x2\x2\x2\x82\x83\ay\x2\x2\x83\x84\aj\x2\x2\x84\x85\ak\x2\x2\x85\x86"+
		"\an\x2\x2\x86\x87\ag\x2\x2\x87 \x3\x2\x2\x2\x88\x89\ah\x2\x2\x89\x8A\a"+
		"q\x2\x2\x8A\x8B\at\x2\x2\x8B\"\x3\x2\x2\x2\x8C\x90\t\x2\x2\x2\x8D\x8F"+
		"\t\x3\x2\x2\x8E\x8D\x3\x2\x2\x2\x8F\x92\x3\x2\x2\x2\x90\x8E\x3\x2\x2\x2"+
		"\x90\x91\x3\x2\x2\x2\x91$\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2\x93\x97\t\x4"+
		"\x2\x2\x94\x96\t\x5\x2\x2\x95\x94\x3\x2\x2\x2\x96\x99\x3\x2\x2\x2\x97"+
		"\x95\x3\x2\x2\x2\x97\x98\x3\x2\x2\x2\x98\x9C\x3\x2\x2\x2\x99\x97\x3\x2"+
		"\x2\x2\x9A\x9C\a\x32\x2\x2\x9B\x93\x3\x2\x2\x2\x9B\x9A\x3\x2\x2\x2\x9C"+
		"&\x3\x2\x2\x2\x9D\x9E\av\x2\x2\x9E\x9F\at\x2\x2\x9F\xA0\aw\x2\x2\xA0\xA7"+
		"\ag\x2\x2\xA1\xA2\ah\x2\x2\xA2\xA3\a\x63\x2\x2\xA3\xA4\an\x2\x2\xA4\xA5"+
		"\au\x2\x2\xA5\xA7\ag\x2\x2\xA6\x9D\x3\x2\x2\x2\xA6\xA1\x3\x2\x2\x2\xA7"+
		"(\x3\x2\x2\x2\xA8\xAC\t\x4\x2\x2\xA9\xAB\t\x5\x2\x2\xAA\xA9\x3\x2\x2\x2"+
		"\xAB\xAE\x3\x2\x2\x2\xAC\xAA\x3\x2\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xAF\x3"+
		"\x2\x2\x2\xAE\xAC\x3\x2\x2\x2\xAF\xB3\a\x30\x2\x2\xB0\xB2\t\x5\x2\x2\xB1"+
		"\xB0\x3\x2\x2\x2\xB2\xB5\x3\x2\x2\x2\xB3\xB1\x3\x2\x2\x2\xB3\xB4\x3\x2"+
		"\x2\x2\xB4*\x3\x2\x2\x2\xB5\xB3\x3\x2\x2\x2\xB6\xBA\a$\x2\x2\xB7\xB9\t"+
		"\x6\x2\x2\xB8\xB7\x3\x2\x2\x2\xB9\xBC\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2"+
		"\xBA\xBB\x3\x2\x2\x2\xBB\xBD\x3\x2\x2\x2\xBC\xBA\x3\x2\x2\x2\xBD\xBE\a"+
		"$\x2\x2\xBE,\x3\x2\x2\x2\xBF\xC1\t\a\x2\x2\xC0\xBF\x3\x2\x2\x2\xC1\xC2"+
		"\x3\x2\x2\x2\xC2\xC0\x3\x2\x2\x2\xC2\xC3\x3\x2\x2\x2\xC3\xC4\x3\x2\x2"+
		"\x2\xC4\xC5\b\x17\x2\x2\xC5.\x3\x2\x2\x2\xC6\xC7\a?\x2\x2\xC7\x30\x3\x2"+
		"\x2\x2\xC8\xC9\a/\x2\x2\xC9\x32\x3\x2\x2\x2\xCA\xCB\a#\x2\x2\xCB\x34\x3"+
		"\x2\x2\x2\xCC\xCD\a>\x2\x2\xCD\x36\x3\x2\x2\x2\xCE\xCF\a@\x2\x2\xCF\x38"+
		"\x3\x2\x2\x2\xD0\xD1\a-\x2\x2\xD1:\x3\x2\x2\x2\xD2\xD3\a/\x2\x2\xD3<\x3"+
		"\x2\x2\x2\xD4\xD5\a\x30\x2\x2\xD5>\x3\x2\x2\x2\xD6\xD7\a,\x2\x2\xD7@\x3"+
		"\x2\x2\x2\xD8\xD9\a\x31\x2\x2\xD9\x42\x3\x2\x2\x2\xDA\xDB\a\'\x2\x2\xDB"+
		"\x44\x3\x2\x2\x2\xDC\xDD\a~\x2\x2\xDD\xDE\a~\x2\x2\xDE\x46\x3\x2\x2\x2"+
		"\xDF\xE0\a(\x2\x2\xE0\xE1\a(\x2\x2\xE1H\x3\x2\x2\x2\xE2\xE3\a?\x2\x2\xE3"+
		"\xE4\a?\x2\x2\xE4J\x3\x2\x2\x2\xE5\xE6\a#\x2\x2\xE6\xE7\a?\x2\x2\xE7L"+
		"\x3\x2\x2\x2\v\x2\x90\x97\x9B\xA6\xAC\xB3\xBA\xC2\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace PLC_Lab7
