//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\zahry\pjp\project\PLC_Lab7\PLC_Lab7\PLC_Lab7_expr.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PLC_Lab7 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PLC_Lab7_exprLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, INT_KW=13, FLOAT_KW=14, BOOL_KW=15, STRING_KW=16, 
		ID=17, INT=18, BOOL=19, FLOAT=20, STRING=21, WS=22, ASSIGN=23, UN_MIN=24, 
		NEG_OP=25, BIN_AR_MUL=26, BIN_AR_ADD=27, LOG_OR=28, LOG_AND=29, CMP=30, 
		REL=31;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "INT_KW", "FLOAT_KW", "BOOL_KW", "STRING_KW", 
		"ID", "INT", "BOOL", "FLOAT", "STRING", "WS", "ASSIGN", "UN_MIN", "NEG_OP", 
		"BIN_AR_MUL", "BIN_AR_ADD", "LOG_OR", "LOG_AND", "CMP", "REL"
	};


	public PLC_Lab7_exprLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "','", "'read'", "'write'", "'{'", "'}'", "'if'", "'else'", 
		"'while'", "'for'", "'('", "')'", "'int'", "'float'", "'bool'", "'string'", 
		null, null, null, null, null, null, "'='", "'-'", "'!'", null, null, "'||'", 
		"'&&'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "INT_KW", "FLOAT_KW", "BOOL_KW", "STRING_KW", "ID", "INT", "BOOL", 
		"FLOAT", "STRING", "WS", "ASSIGN", "UN_MIN", "NEG_OP", "BIN_AR_MUL", "BIN_AR_ADD", 
		"LOG_OR", "LOG_AND", "CMP", "REL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PLC_Lab7_expr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2!\xD2\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3"+
		"\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3"+
		"\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3"+
		"\x11\x3\x11\x3\x12\x3\x12\a\x12\x83\n\x12\f\x12\xE\x12\x86\v\x12\x3\x13"+
		"\x3\x13\a\x13\x8A\n\x13\f\x13\xE\x13\x8D\v\x13\x3\x13\x5\x13\x90\n\x13"+
		"\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x5\x14"+
		"\x9B\n\x14\x3\x15\x3\x15\a\x15\x9F\n\x15\f\x15\xE\x15\xA2\v\x15\x3\x15"+
		"\x3\x15\a\x15\xA6\n\x15\f\x15\xE\x15\xA9\v\x15\x3\x16\x3\x16\a\x16\xAD"+
		"\n\x16\f\x16\xE\x16\xB0\v\x16\x3\x16\x3\x16\x3\x17\x6\x17\xB5\n\x17\r"+
		"\x17\xE\x17\xB6\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A"+
		"\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x5\x1F\xCF\n\x1F\x3 \x3 \x2\x2\x2!\x3\x2"+
		"\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x3\x2\v\x4\x2\x43"+
		"\\\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x3\x2\x33;\x3\x2\x32;\t\x2\"#\'"+
		"@\x42]__\x61\x61\x63}\x7F\x7F\x5\x2\v\f\xF\xF\"\"\x5\x2\'\',,\x31\x31"+
		"\x4\x2--/\x30\x4\x2>>@@\xDA\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3"+
		"\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3"+
		"\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2"+
		"\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2"+
		"\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2"+
		"\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/"+
		"\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x3\x41\x3\x2\x2\x2\x5\x43\x3\x2\x2\x2\a\x45\x3\x2\x2"+
		"\x2\tJ\x3\x2\x2\x2\vP\x3\x2\x2\x2\rR\x3\x2\x2\x2\xFT\x3\x2\x2\x2\x11W"+
		"\x3\x2\x2\x2\x13\\\x3\x2\x2\x2\x15\x62\x3\x2\x2\x2\x17\x66\x3\x2\x2\x2"+
		"\x19h\x3\x2\x2\x2\x1Bj\x3\x2\x2\x2\x1Dn\x3\x2\x2\x2\x1Ft\x3\x2\x2\x2!"+
		"y\x3\x2\x2\x2#\x80\x3\x2\x2\x2%\x8F\x3\x2\x2\x2\'\x9A\x3\x2\x2\x2)\x9C"+
		"\x3\x2\x2\x2+\xAA\x3\x2\x2\x2-\xB4\x3\x2\x2\x2/\xBA\x3\x2\x2\x2\x31\xBC"+
		"\x3\x2\x2\x2\x33\xBE\x3\x2\x2\x2\x35\xC0\x3\x2\x2\x2\x37\xC2\x3\x2\x2"+
		"\x2\x39\xC4\x3\x2\x2\x2;\xC7\x3\x2\x2\x2=\xCE\x3\x2\x2\x2?\xD0\x3\x2\x2"+
		"\x2\x41\x42\a=\x2\x2\x42\x4\x3\x2\x2\x2\x43\x44\a.\x2\x2\x44\x6\x3\x2"+
		"\x2\x2\x45\x46\at\x2\x2\x46G\ag\x2\x2GH\a\x63\x2\x2HI\a\x66\x2\x2I\b\x3"+
		"\x2\x2\x2JK\ay\x2\x2KL\at\x2\x2LM\ak\x2\x2MN\av\x2\x2NO\ag\x2\x2O\n\x3"+
		"\x2\x2\x2PQ\a}\x2\x2Q\f\x3\x2\x2\x2RS\a\x7F\x2\x2S\xE\x3\x2\x2\x2TU\a"+
		"k\x2\x2UV\ah\x2\x2V\x10\x3\x2\x2\x2WX\ag\x2\x2XY\an\x2\x2YZ\au\x2\x2Z"+
		"[\ag\x2\x2[\x12\x3\x2\x2\x2\\]\ay\x2\x2]^\aj\x2\x2^_\ak\x2\x2_`\an\x2"+
		"\x2`\x61\ag\x2\x2\x61\x14\x3\x2\x2\x2\x62\x63\ah\x2\x2\x63\x64\aq\x2\x2"+
		"\x64\x65\at\x2\x2\x65\x16\x3\x2\x2\x2\x66g\a*\x2\x2g\x18\x3\x2\x2\x2h"+
		"i\a+\x2\x2i\x1A\x3\x2\x2\x2jk\ak\x2\x2kl\ap\x2\x2lm\av\x2\x2m\x1C\x3\x2"+
		"\x2\x2no\ah\x2\x2op\an\x2\x2pq\aq\x2\x2qr\a\x63\x2\x2rs\av\x2\x2s\x1E"+
		"\x3\x2\x2\x2tu\a\x64\x2\x2uv\aq\x2\x2vw\aq\x2\x2wx\an\x2\x2x \x3\x2\x2"+
		"\x2yz\au\x2\x2z{\av\x2\x2{|\at\x2\x2|}\ak\x2\x2}~\ap\x2\x2~\x7F\ai\x2"+
		"\x2\x7F\"\x3\x2\x2\x2\x80\x84\t\x2\x2\x2\x81\x83\t\x3\x2\x2\x82\x81\x3"+
		"\x2\x2\x2\x83\x86\x3\x2\x2\x2\x84\x82\x3\x2\x2\x2\x84\x85\x3\x2\x2\x2"+
		"\x85$\x3\x2\x2\x2\x86\x84\x3\x2\x2\x2\x87\x8B\t\x4\x2\x2\x88\x8A\t\x5"+
		"\x2\x2\x89\x88\x3\x2\x2\x2\x8A\x8D\x3\x2\x2\x2\x8B\x89\x3\x2\x2\x2\x8B"+
		"\x8C\x3\x2\x2\x2\x8C\x90\x3\x2\x2\x2\x8D\x8B\x3\x2\x2\x2\x8E\x90\a\x32"+
		"\x2\x2\x8F\x87\x3\x2\x2\x2\x8F\x8E\x3\x2\x2\x2\x90&\x3\x2\x2\x2\x91\x92"+
		"\av\x2\x2\x92\x93\at\x2\x2\x93\x94\aw\x2\x2\x94\x9B\ag\x2\x2\x95\x96\a"+
		"h\x2\x2\x96\x97\a\x63\x2\x2\x97\x98\an\x2\x2\x98\x99\au\x2\x2\x99\x9B"+
		"\ag\x2\x2\x9A\x91\x3\x2\x2\x2\x9A\x95\x3\x2\x2\x2\x9B(\x3\x2\x2\x2\x9C"+
		"\xA0\t\x4\x2\x2\x9D\x9F\t\x5\x2\x2\x9E\x9D\x3\x2\x2\x2\x9F\xA2\x3\x2\x2"+
		"\x2\xA0\x9E\x3\x2\x2\x2\xA0\xA1\x3\x2\x2\x2\xA1\xA3\x3\x2\x2\x2\xA2\xA0"+
		"\x3\x2\x2\x2\xA3\xA7\a\x30\x2\x2\xA4\xA6\t\x5\x2\x2\xA5\xA4\x3\x2\x2\x2"+
		"\xA6\xA9\x3\x2\x2\x2\xA7\xA5\x3\x2\x2\x2\xA7\xA8\x3\x2\x2\x2\xA8*\x3\x2"+
		"\x2\x2\xA9\xA7\x3\x2\x2\x2\xAA\xAE\a$\x2\x2\xAB\xAD\t\x6\x2\x2\xAC\xAB"+
		"\x3\x2\x2\x2\xAD\xB0\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2\xAE\xAF\x3\x2\x2"+
		"\x2\xAF\xB1\x3\x2\x2\x2\xB0\xAE\x3\x2\x2\x2\xB1\xB2\a$\x2\x2\xB2,\x3\x2"+
		"\x2\x2\xB3\xB5\t\a\x2\x2\xB4\xB3\x3\x2\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6\xB4"+
		"\x3\x2\x2\x2\xB6\xB7\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xB9\b\x17\x2"+
		"\x2\xB9.\x3\x2\x2\x2\xBA\xBB\a?\x2\x2\xBB\x30\x3\x2\x2\x2\xBC\xBD\a/\x2"+
		"\x2\xBD\x32\x3\x2\x2\x2\xBE\xBF\a#\x2\x2\xBF\x34\x3\x2\x2\x2\xC0\xC1\t"+
		"\b\x2\x2\xC1\x36\x3\x2\x2\x2\xC2\xC3\t\t\x2\x2\xC3\x38\x3\x2\x2\x2\xC4"+
		"\xC5\a~\x2\x2\xC5\xC6\a~\x2\x2\xC6:\x3\x2\x2\x2\xC7\xC8\a(\x2\x2\xC8\xC9"+
		"\a(\x2\x2\xC9<\x3\x2\x2\x2\xCA\xCB\a?\x2\x2\xCB\xCF\a?\x2\x2\xCC\xCD\a"+
		"#\x2\x2\xCD\xCF\a?\x2\x2\xCE\xCA\x3\x2\x2\x2\xCE\xCC\x3\x2\x2\x2\xCF>"+
		"\x3\x2\x2\x2\xD0\xD1\t\n\x2\x2\xD1@\x3\x2\x2\x2\f\x2\x84\x8B\x8F\x9A\xA0"+
		"\xA7\xAE\xB6\xCE\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace PLC_Lab7
